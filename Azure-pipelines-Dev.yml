# trigger:
#   branches:
#     include:
#       - dev

# pool:
#   vmImage: 'ubuntu-latest'

# variables:
#   azureSubscription: '9582ec76-393f-4a2b-af21-6f2d8e152660'  # Azure ARM service connection
#   acrName: 'tlgldevacr'
#   imageName: '$(acrName).azurecr.io/tedlabs-webapp'  # Correct camelCase
#   tag: '$(Build.BuildId)'  # Unique build ID
#   resourceGroup: 'TL-GLB-Dev-RG'
#   webAppName: 'TL-GLB-Dev-WebApp'
  
# stages:
#   - stage: BuildAndPush
#     displayName: 'Build and Push Docker Image'
#     jobs:
#       - job: Build
#         displayName: 'Build and Push to ACR'
#         steps:
#           - script: ls -R
#             displayName: 'List Files for Debugging'
#           - task: AzureCLI@2
#             displayName: 'Login to ACR'
#             inputs:
#               azureSubscription: '$(azureSubscription)'
#               scriptType: 'bash'
#               scriptLocation: 'inlineScript'  
#               inlineScript: |
#                 ACR_USERNAME=$(az acr credential show --name $(acrName) --query username --output tsv)
#                 ACR_PASSWORD=$(az acr credential show --name $(acrName) --query "passwords[0].value" --output tsv)
#                 echo "##vso[task.setvariable variable=ACR_USERNAME]$ACR_USERNAME"
#                 echo "##vso[task.setvariable variable=ACR_PASSWORD;issecret=true]$ACR_PASSWORD"
#                 docker login $(acrName).azurecr.io -u $ACR_USERNAME -p $ACR_PASSWORD
#           - task: Docker@2
#             displayName: 'Build Docker Image'
#             inputs:
#               command: 'build'
#               Dockerfile: 'Dockerfile'
#               repository: '$(imageName)'
#               tags: '$(tag)'
#           - task: Docker@2
#             displayName: 'Push Docker Image to ACR'
#             inputs:
#               command: 'push'
#               repository: '$(imageName)'
#               tags: '$(tag)'
#               # No containerRegistry needed; login handled above

#   - stage: Deploy
#     displayName: 'Deploy to App Service'
#     dependsOn: BuildAndPush
#     condition: succeeded()
#     jobs:
#       - job: Deploy
#         displayName: 'Deploy to Azure App Service'
#         steps:
#           - task: AzureWebAppContainer@1
#             displayName: 'Deploy Container to Web App'
#             inputs:
#               azureSubscription: '$(azureSubscription)'
#               resourceGroupName: '$(resourceGroup)'
#               appName: '$(webAppName)'
#               imageName: '$(imageName):$(tag)'